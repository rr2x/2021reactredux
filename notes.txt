redux = predictable state container for js apps
      = not tied to react (can be used on other library/framework)
      = state management library


state container = stores state of app


react-redux = official redux ui binding library for react
            = bridge to work with react and redux
            = required to be learned, some work clients need it


>>> npm init --yes
>>> npm i redux


3 concepts in redux

- store:
      holds the state

- action:
      describes what will happen (intention)
      action-type = type of action
      action-creator = function that returns an object according to action type

- reducer:
      ties store and action together, state transition
      function that accept state and action as arguments
      returns new state


3 principles
- state is stored in an object managed by a single store
- only way to change state is to "dispatch" an "action"
  (not allowed to directly update the state)
- write pure reducers to specify how state tree is transformed by actions
  ("reducers" return updated state)


>>> node index


middleware = extend redux with custom functionality

>>> npm i redux-logger   (provides good logging on redux)

>>> npm i axios redux-thunk

---------

>>> npx create-react-app react-redux-demo
>>> npm i redux react-redux redux-logger


redux devtools = useful extension/addon for inspecting react state
      -> f12 -> redux tab

      >>> npm i redux-devtools-extension
      -> then setup the redux store (store.js)


async action = action that needs to wait before changing state

>>> npm i axios redux-thunk